{"version":3,"sources":["redux/theme/themeReducer.js","redux/theme/themeTypes.js","redux/rootReducer.js","redux/store.js","components/Cards/Cards.js","api/index.js","components/Charts/Charts.js","components/CountryPicker/CountryPicker.js","components/ThemeToggle/ThemeToggle.js","redux/theme/themeActions.js","App.js","index.js","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Cards/Cards.module.css","images/image.png"],"names":["initialState","isDark","themeReducer","state","action","type","rootReducer","combineReducers","theme","store","createStore","composeWithDevTools","applyMiddleware","connect","props","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","darkCard","infected","card","CardContent","Typography","color","gutterBottom","darkInfected","variant","start","end","value","duration","separator","Date","toDateString","darkRecovered","darkDeath","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","canvasDark","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountryAPI","FormControl","darkSelector","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","dispatch","toggleTheme","id","for","onClick","App","countryVal","fetchedData2","setState","fetchedData","this","document","querySelector","classList","add","remove","image","src","coronaImage","alt","Component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.64da1c6d.chunk.js","sourcesContent":["import { THEME_TOGGLE } from \"./themeTypes\";\n\nconst initialState = {\n  isDark: false,\n};\n\nconst themeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n\n    case THEME_TOGGLE: {\n      return {\n        isDark: !state.isDark,\n      };\n    }\n  }\n};\n\nexport default themeReducer;\n","export const THEME_TOGGLE = \"THEME_TOGGLE\";\n","import { combineReducers } from \"redux\";\nimport themeReducer from \"./theme/themeReducer\";\n\nconst rootReducer = combineReducers({\n  theme: themeReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware()));\n\nexport default store;\n","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nimport { connect } from \"react-redux\";\n\nconst Cards = (props) => {\n  const {\n    data: { confirmed, deaths, recovered, lastUpdate },\n  } = props;\n\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={\n            !props.isDark\n              ? cx(styles.card, styles.infected)\n              : cx(styles.darkCard, styles.infected)\n          }\n        >\n          <CardContent>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              className={props.isDark ? styles.darkInfected : null}\n            >\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2}\n                separator=\",\"\n              ></CountUp>\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              className={props.isDark ? styles.darkInfected : null}\n            >\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={\n            !props.isDark\n              ? cx(styles.card, styles.recovered)\n              : cx(styles.darkCard, styles.recovered)\n          }\n        >\n          <CardContent>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              className={props.isDark ? styles.darkRecovered : null}\n            >\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2}\n                separator=\",\"\n              ></CountUp>\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              className={props.isDark ? styles.darkRecovered : null}\n            >\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recovered cases from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={\n            !props.isDark\n              ? cx(styles.card, styles.deaths)\n              : cx(styles.darkCard, styles.deaths)\n          }\n        >\n          <CardContent>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              className={props.isDark ? styles.darkDeath : null}\n            >\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2}\n                separator=\",\"\n              ></CountUp>\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              className={props.isDark ? styles.darkDeath : null}\n            >\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isDark: state.theme.isDark,\n  };\n};\n\nexport default connect(mapStateToProps)(Cards);\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, deaths, recovered, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    // above can be further destructured\n    const modifiedData = {\n      confirmed,\n      deaths,\n      recovered,\n      lastUpdate,\n    };\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\n\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Charts.module.css\";\nimport cx from \"classnames\";\nimport { connect } from \"react-redux\";\n\nconst Charts = ({\n  data: { confirmed, recovered, deaths },\n  country,\n  isDark,\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    ></Line>\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current State in ${country}` },\n      }}\n    ></Bar>\n  ) : null;\n\n  return (\n    <div\n      className={\n        !isDark ? cx(styles.container) : cx(styles.container, styles.canvasDark)\n      }\n    >\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isDark: state.theme.isDark,\n  };\n};\n\nexport default connect(mapStateToProps)(Charts);\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\n\nconst CountryPicker = ({ handleCountryChange, isDark }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchCountryAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchCountryAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl\n      className={\n        isDark\n          ? cx(styles.darkSelector, styles.formControl)\n          : styles.formControl\n      }\n    >\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isDark: state.theme.isDark,\n  };\n};\n\nexport default connect(mapStateToProps)(CountryPicker);\n","import React from \"react\";\nimport \"./ThemeToggle.css\";\nimport { connect } from \"react-redux\";\nimport { toggleTheme } from \"../../redux\";\n\nfunction ThemeToggle(props) {\n  return (\n    <>\n      <div className=\"wrapper\">\n        <input type=\"checkbox\" id=\"hide-checkbox\"></input>\n        <label\n          for=\"hide-checkbox\"\n          className=\"toggle\"\n          onClick={props.toggleTheme}\n        >\n          <span className=\"toggle-button\">\n            <span className=\"crater crater-1\"></span>\n            <span className=\"crater crater-2\"></span>\n            <span className=\"crater crater-3\"></span>\n            <span className=\"crater crater-4\"></span>\n            <span className=\"crater crater-5\"></span>\n            <span className=\"crater crater-6\"></span>\n            <span className=\"crater crater-7\"></span>\n          </span>\n          <span className=\"star star-1\"></span>\n          <span className=\"star star-2\"></span>\n          <span className=\"star star-3\"></span>\n          <span className=\"star star-4\"></span>\n          <span className=\"star star-5\"></span>\n          <span className=\"star star-6\"></span>\n          <span className=\"star star-7\"></span>\n          <span className=\"star star-8\"></span>\n        </label>\n      </div>\n    </>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleTheme: () => {\n      dispatch(toggleTheme());\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ThemeToggle);\n","import { THEME_TOGGLE } from \"./themeTypes\";\n\nexport const toggleTheme = () => {\n  return {\n    type: THEME_TOGGLE,\n  };\n};\n","import React, { Component } from \"react\";\n\n// Usealternative as below\n// import Cards from \"./components/Cards/Cards\";\n// import CountryPicker from \"./components/CountryPicker/CountryPicker\";\n// import Charts from \"./components/Charts/Charts\";\n\nimport { Cards, CountryPicker, Charts, ThemeToggle } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport coronaImage from \"./images/image.png\";\nimport cx from \"classnames\";\n\nimport { connect } from \"react-redux\";\n\nexport class App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({\n      data: fetchedData,\n    });\n  }\n\n  handleCountryChange = async (countryVal) => {\n    const fetchedData2 = await fetchData(countryVal);\n    this.setState({\n      data: fetchedData2,\n      country: countryVal,\n    });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <>\n        {this.props.isDark\n          ? document.querySelector(\".mainBody\").classList.add(\"darkBody\")\n          : document.querySelector(\".mainBody\").classList.remove(\"darkBody\")}\n        <ThemeToggle></ThemeToggle>\n        <div className={styles.container}>\n          <img className={styles.image} src={coronaImage} alt=\"corona Title\" />\n          <Cards data={data}></Cards>\n          <CountryPicker\n            handleCountryChange={this.handleCountryChange}\n          ></CountryPicker>\n\n          <Charts data={data} country={country}></Charts>\n        </div>\n      </>\n    );\n  }\n}\n// Step:1\nconst mapStateToProps = (state) => {\n  return {\n    isDark: state.theme.isDark,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\",\"canvasDark\":\"Charts_canvasDark__iYBZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"darkSelector\":\"CountryPicker_darkSelector__2QoX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkBody\":\"App_darkBody__1SHnO\",\"container\":\"App_container__1MQN3\",\"darkContainer\":\"App_darkContainer__2twO8\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"darkCard\":\"Cards_darkCard__3w6DN\",\"infected\":\"Cards_infected__-adYp\",\"darkInfected\":\"Cards_darkInfected__1wnI-\",\"recovered\":\"Cards_recovered__1aizD\",\"darkRecovered\":\"Cards_darkRecovered__1NvuJ\",\"deaths\":\"Cards_deaths__Qdjzq\",\"darkDeath\":\"Cards_darkDeath__3ZmOH\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}